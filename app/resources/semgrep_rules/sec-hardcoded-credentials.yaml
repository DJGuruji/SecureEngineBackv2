rules:
  - id: sec-hardcoded-credentials
    message: Hardcoded credentials detection
    severity: ERROR
    metadata:
      category: security
      subcategory: auth
      impact: HIGH
      likelihood: MEDIUM
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp: "A2:2017 - Broken Authentication"
    languages:
      - python
      - javascript
      - typescript
      - java
      - go
      - ruby
      - csharp
      - php
    patterns:
      - pattern-either:
          # Common password/token variable names
          - pattern: |
              $VAR = "..."
            metavariable-regex:
              VAR: (?i)(password|passwd|pwd|pass|secret|token|api_?key|auth|credentials|secret_?key)
          # Environment variable setting
          - pattern: |
              $VAR="..."
            metavariable-regex:
              VAR: (?i)(password|passwd|pwd|pass|secret|token|api_?key|auth|credentials|secret_?key)
          # Common JS/TS patterns
          - pattern: |
              const $VAR = "..."
            metavariable-regex:
              VAR: (?i)(password|passwd|pwd|pass|secret|token|api_?key|auth|credentials|secret_?key)
          - pattern: |
              let $VAR = "..."
            metavariable-regex:
              VAR: (?i)(password|passwd|pwd|pass|secret|token|api_?key|auth|credentials|secret_?key)
          # Common Java patterns
          - pattern: |
              private $TYPE $VAR = "...";
            metavariable-regex:
              VAR: (?i)(password|passwd|pwd|pass|secret|token|api_?key|auth|credentials|secret_?key)
              TYPE: .*
          # URL with auth info
          - pattern-regex: ((https?|ftp)://)[^:]+:[^@]+@.+
    fix: |
      // Replace with environment variable or configuration
      // Example: $VAR = process.env.SECRET_KEY 